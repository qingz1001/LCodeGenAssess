#include <stdio.h>
#include <string.h>

#define MAX_DIGITS 100

int count_stars(const char *num) {
    int count = 0;
    for (int i = 0; i < 7 * 7; i++) {
        if (num[i] == '*') count++;
    }
    return count;
}

void get_max_number(int n, char result[]) {
    const char *nums[] = {
        ".............................*.................*......................*...........*.....*****......*.....*...*....*...***......................",
        "........................................................................***................................................*****..............",
        ".......................................................................***..........*****....................................*******.........",
        "*******.*.*.*.*.*.*.*.**...***.*...*.*.......******...*.*.......*.*....*.*....*...*..*.....*......................................*******.....",
        ".......*******...*.......*...*..*****.....*...*..*...*.*....*...*....*.*...*.*....*...*...*******.....................................*.......",
        "......................................*******.*...*..*.....*.*...*.*.*...***................................................*******.........",
        ".......*******.......................................****.......................................................*****......................"
    };
    
    int stars_left = n;
    int digit = 0;
    
    while (stars_left >= 5 && digit < MAX_DIGITS) {
        int max_feasible = -1;
        for (int i = 9; i >= 0; i--) {
            int stars_needed = count_stars(nums[i]);
            if (stars_needed <= stars_left) {
                max_feasible = i;
                break;
            }
        }
        
        if (max_feasible == -1) break;
        
        result[digit++] = max_feasible + '0';
        stars_left -= count_stars(nums[max_feasible]);
    }
    
    result[digit] = '\0';
}

int main() {
    int n;
    scanf("%d", &n);
    
    char result[MAX_DIGITS + 1];
    get_max_number(n, result);
    
    printf("%s\n", result);
    
    return 0;
}