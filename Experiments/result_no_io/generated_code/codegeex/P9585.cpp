#include <stdio.h>

int main() {
    int n, m;
    scanf("%d %d", &n, &m);

    // 如果客人数 n 大于房间数 m，则无法安排，输出 -1
    if (n > m) {
        printf("-1\n");
        return 0;
    }

    // 计算愤怒值之和的最小值
    // 由于房间是环形的，所以需要考虑环的边界情况
    // 我们可以假设第一个房间是空的，然后计算其他房间的愤怒值
    int anger = 0;
    for (int i = 1; i <= m; i++) {
        // 每个房间相邻的房间数
        int adjacent = 2;
        // 如果房间数小于等于3，则没有相邻房间
        if (m <= 3) {
            adjacent = 0;
        }
        // 如果房间数等于4且客人数大于等于3，则第一个房间和最后一个房间相邻
        if (m == 4 && n >= 3) {
            adjacent = 2;
        }
        // 如果房间数等于5且客人数等于3，则第一个房间和最后一个房间相邻
        if (m == 5 && n == 3) {
            adjacent = 2;
        }
        // 如果房间数等于6且客人数等于3，则第一个房间和最后一个房间相邻
        if (m == 6 && n == 3) {
            adjacent = 2;
        }
        // 如果房间数等于6且客人数等于4，则第一个房间和最后一个房间相邻
        if (m == 6 && n == 4) {
            adjacent = 2;
        }
        // 如果房间数等于7且客人数等于4，则第一个房间和最后一个房间相邻
        if (m == 7 && n == 4) {
            adjacent = 2;
        }
        // 如果房间数等于7且客人数等于5，则第一个房间和最后一个房间相邻
        if (m == 7 && n == 5) {
            adjacent = 2;
        }
        // 如果房间数等于8且客人数等于5，则第一个房间和最后一个房间相邻
        if (m == 8 && n == 5) {
            adjacent = 2;
        }
        // 如果房间数等于8且客人数等于6，则第一个房间和最后一个房间相邻
        if (m == 8 && n == 6) {
            adjacent = 2;
        }
        // 如果房间数等于9且客人数等于6，则第一个房间和最后一个房间相邻
        if (m == 9 && n == 6) {
            adjacent = 2;
        }
        // 如果房间数等于9且客人数等于7，则第一个房间和最后一个房间相邻
        if (m == 9 && n == 7) {
            adjacent = 2;
        }
        // 如果房间数等于10且客人数等于7，则第一个房间和最后一个房间相邻
        if (m == 10 && n == 7) {
            adjacent = 2;
        }

        // 累加愤怒值
        anger += adjacent;
    }

    // 输出愤怒值之和的最小值
    printf("%d\n", anger);
    return 0;
}